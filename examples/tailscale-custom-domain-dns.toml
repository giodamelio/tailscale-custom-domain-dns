# Example config file
# This config file includes all available options with default settings.
# Empty strings represent options with no default settings that must be 
# specified.

# Set the level of logging. Possible values are: 
# "trace", "debug", "info", "warn", "error", "fatal", and "panic".
log-level = "debug"

# The fully qualified domain that you want to serve subdomain records for.
# Note the "." at the end.
# Example: "home.lan." would provide a response for "<machine name>.home.lan"
domain = ""

[tailscale]
# The name of your Tailscale organization. This is necessary to get a list of 
# all devices in your tailnet.
# See: https://github.com/tailscale/tailscale/blob/main/api.md#list-tailnet-devices
#
# Instructions on how to find your organization name:
# https://tailscale.com/kb/1217/tailnet-name/#organization-name
#
# Example: "<username>.github"
organization-name = ""

# Tailscale auth key. Allows the server to join your tailnet
# WARNING: this is a secret value, consider setting it via an environment variable instead ofsaving it in a potentially insecure config file.
# Example: "tskey-abcdef1432341818"
auth-key = ""

# Tailscale OAuth client id and secret
# These are used to call the Tailscale API and get the list of devices on your tailnet and their IP addresses.
# WARNING: these are secret values, consider setting it via an environment variable instead ofsaving it in a potentially insecure config file.
# Example: id = "gC4s54HItEeu", secret = "tskey-client-gC4s54HItEeu-AAAAAAAAAAAAAAAAAAAAA"
oauth-client-id = ""
oauth-client-secret = ""

# The hostname that the server will connect to your tailnet with.
hostname = "tailscale-custom-domain-dns"

# The directory that the Tailscale state is stored in
# If it is not set, tsnet will choose a path in the users config directory
# Example: state-dir = "/data"
state-dir = ""

[dns-server]
# The port that the DNS server will run on.
# The port is opened directly on your tailnet using the tsnet library, so you 
# do not need root privileges to run on port 53.
port = 53

[fetcher]
# How frequently the server will fetch the list of devices from your organization.
interval = "1h"
